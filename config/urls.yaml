- annotations: &id001
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"gateway.networking.k8s.io/v1beta1","kind":"HTTPRoute","metadata":{"annotations":{},"labels":{"argocd.argoproj.io/instance":"main-cluster-setup"},"name":"traefik-dashboard","namespace":"kube-infra"},"spec":{"hostnames":["traefik.dc-tech.work"],"parentRefs":[{"group":"gateway.networking.k8s.io","kind":"Gateway","name":"traefik-gateway-global","namespace":"kube-infra"}],"rules":[{"backendRefs":[{"group":"traefik.io","kind":"TraefikService","name":"api@internal","port":9000,"weight":1}],"filters":[{"extensionRef":{"group":"traefik.io","kind":"Middleware","name":"traefik-dashboard-auth"},"type":"ExtensionRef"}],"matches":[{"path":{"type":"PathPrefix","value":"/dashboard"}},{"path":{"type":"PathPrefix","value":"/api"}}]}]}}

      '
  info: 'Path: /dashboard'
  name: traefik-dashboard
  namespace: kube-infra
  status: unknown
  type: HTTPRoute
  url: traefik.dc-tech.work/dashboard
- annotations: *id001
  info: 'Path: /api'
  name: traefik-dashboard
  namespace: kube-infra
  status: unknown
  type: HTTPRoute
  url: traefik.dc-tech.work/api
- annotations:
    meta.helm.sh/release-name: agesetvie-rec
    meta.helm.sh/release-namespace: agesetvie
  info: 'Path: /, Backend: Service: agesetvie-rec-directus'
  labels:
    app.kubernetes.io/instance: agesetvie-rec
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ageetvie
    app.kubernetes.io/version: 1.16.0
    argocd.argoproj.io/instance: agesetvie-rec
    helm.sh/chart: ageetvie-0.1.0
  name: agesetvie-rec-ageetvie-directus
  namespace: agesetvie
  status: Active
  type: Ingress
  url: backoffice-recette.agesetvie.cloud/
- annotations:
    meta.helm.sh/release-name: agesetvie-rec
    meta.helm.sh/release-namespace: agesetvie
  info: 'Path: /, Backend: Service: agesetvie-rec-nextjs'
  labels:
    app.kubernetes.io/instance: agesetvie-rec
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ageetvie
    app.kubernetes.io/version: 1.16.0
    argocd.argoproj.io/instance: agesetvie-rec
    helm.sh/chart: ageetvie-0.1.0
  name: agesetvie-rec-ageetvie-nextjs
  namespace: agesetvie
  status: Active
  type: Ingress
  url: recette.agesetvie.cloud/
- annotations:
    meta.helm.sh/release-name: argocd
    meta.helm.sh/release-namespace: argocd
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
  info: 'Path: /, Backend: Service: argocd-server'
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.9.3
    helm.sh/chart: argo-cd-5.52.1
  name: argocd-server
  namespace: argocd
  status: Active
  type: Ingress
  url: argocd.korian.cloud/
- annotations:
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"networking.k8s.io/v1","kind":"Ingress","metadata":{"annotations":{"nginx.ingress.kubernetes.io/backend-protocol":"GRPC"},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/instance":"argocd","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd","app.kubernetes.io/version":"v2.9.3"},"name":"argocd-server-grpc","namespace":"argocd"},"spec":{"ingressClassName":"nginx","rules":[{"host":"grpc.argocd.korian.cloud","http":{"paths":[{"backend":{"service":{"name":"argocd-server","port":{"name":"https"}}},"path":"/","pathType":"Prefix"}]}}],"tls":[{"hosts":["grpc.argocd.korian.cloud"],"secretName":"argocd-key-cert"}]}}

      '
    nginx.org/grpc-services: argocd-server
  info: 'Path: /, Backend: Service: argocd-server'
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.9.3
  name: argocd-server-grpc
  namespace: argocd
  status: Active
  type: Ingress
  url: grpc.argocd.korian.cloud/
- annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
  info: 'Path: /, Backend: Service: arkhineo-rec'
  labels:
    app.kubernetes.io/instance: arkhineo-rec
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: front-arkhineo
    app.kubernetes.io/version: 1.0.0
    argocd.argoproj.io/instance: arkhineo-rec
    helm.sh/chart: front-arkhineo-0.1.0
  name: arkhineo-rec-front-arkhineo
  namespace: arkhineo
  status: Active
  type: Ingress
  url: archivage-recette.clariane.cloud/
- annotations:
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"networking.k8s.io/v1","kind":"Ingress","metadata":{"annotations":{},"name":"cme-back","namespace":"cme-int"},"spec":{"ingressClassName":"nginx","rules":[{"host":"cme-back-rec.clariane.cloud","http":{"paths":[{"backend":{"service":{"name":"cme-back","port":{"number":3333}}},"path":"/","pathType":"Prefix"}]}}],"tls":[{"hosts":["cme-back-rec.clariane.cloud"],"secretName":"back-tls-secret-fgfbtb82f9"}]},"status":{"loadBalancer":{}}}

      '
  info: 'Path: /, Backend: Service: cme-back'
  labels: {}
  name: cme-back
  namespace: cme-int
  status: Active
  type: Ingress
  url: cme-back-rec.clariane.cloud/
- annotations:
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"networking.k8s.io/v1","kind":"Ingress","metadata":{"annotations":{},"name":"cme-front","namespace":"cme-int"},"spec":{"ingressClassName":"nginx","rules":[{"host":"cme-rec.clariane.cloud","http":{"paths":[{"backend":{"service":{"name":"cme-front","port":{"number":80}}},"path":"/","pathType":"Prefix"}]}}],"tls":[{"hosts":["cme-rec.clariane.cloud"],"secretName":"front-tls-secret-dtgdc9hg2m"}]},"status":{"loadBalancer":{}}}

      '
  info: 'Path: /, Backend: Service: cme-front'
  labels: {}
  name: cme-front
  namespace: cme-int
  status: Active
  type: Ingress
  url: cme-rec.clariane.cloud/
- annotations: &id002
    meta.helm.sh/release-name: conciliation
    meta.helm.sh/release-namespace: conciliation-frm
  info: 'Path: /conciliation, Backend: Service: front'
  labels: &id003
    app.kubernetes.io/instance: conciliation
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: conciliation
    app.kubernetes.io/version: 1.0.39
    helm.sh/chart: conciliation-1.0.0
  name: conciliation
  namespace: conciliation-frm
  status: Active
  type: Ingress
  url: conciliation-frm.korian.cloud/conciliation
- annotations: *id002
  info: 'Path: /conciliation/api, Backend: Service: back'
  labels: *id003
  name: conciliation
  namespace: conciliation-frm
  status: Active
  type: Ingress
  url: conciliation-frm.korian.cloud/conciliation/api
- annotations: &id004
    meta.helm.sh/release-name: conciliation
    meta.helm.sh/release-namespace: conciliation-frm2
  info: 'Path: /conciliation, Backend: Service: front'
  labels: &id005
    app.kubernetes.io/instance: conciliation
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: conciliation
    app.kubernetes.io/version: 1.0.39
    helm.sh/chart: conciliation-1.0.0
  name: conciliation
  namespace: conciliation-frm2
  status: Active
  type: Ingress
  url: conciliation-frm2.korian.cloud/conciliation
- annotations: *id004
  info: 'Path: /conciliation/api, Backend: Service: back'
  labels: *id005
  name: conciliation
  namespace: conciliation-frm2
  status: Active
  type: Ingress
  url: conciliation-frm2.korian.cloud/conciliation/api
- annotations: &id006
    meta.helm.sh/release-name: conciliation
    meta.helm.sh/release-namespace: conciliation-qua
  info: 'Path: /conciliation, Backend: Service: front'
  labels: &id007
    app.kubernetes.io/instance: conciliation
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: conciliation
    app.kubernetes.io/version: 1.0.39
    helm.sh/chart: conciliation-1.0.0
  name: conciliation
  namespace: conciliation-qua
  status: Active
  type: Ingress
  url: conciliation-qua.korian.cloud/conciliation
- annotations: *id006
  info: 'Path: /conciliation/api, Backend: Service: back'
  labels: *id007
  name: conciliation
  namespace: conciliation-qua
  status: Active
  type: Ingress
  url: conciliation-qua.korian.cloud/conciliation/api
- annotations: &id008
    meta.helm.sh/release-name: conciliation
    meta.helm.sh/release-namespace: conciliation-upg
  info: 'Path: /conciliation, Backend: Service: front'
  labels: &id009
    app.kubernetes.io/instance: conciliation
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: conciliation
    app.kubernetes.io/version: 1.0.39
    helm.sh/chart: conciliation-1.0.0
  name: conciliation
  namespace: conciliation-upg
  status: Active
  type: Ingress
  url: conciliation-upg.korian.cloud/conciliation
- annotations: *id008
  info: 'Path: /conciliation/api, Backend: Service: back'
  labels: *id009
  name: conciliation
  namespace: conciliation-upg
  status: Active
  type: Ingress
  url: conciliation-upg.korian.cloud/conciliation/api
- annotations: &id010
    meta.helm.sh/release-name: conciliation
    meta.helm.sh/release-namespace: conciliation
  info: 'Path: /conciliation, Backend: Service: front'
  labels: &id011
    app.kubernetes.io/instance: conciliation
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: conciliation
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: conciliation-0.1.0
  name: conciliation
  namespace: conciliation
  status: Active
  type: Ingress
  url: conciliation-rec.korian.cloud/conciliation
- annotations: *id010
  info: 'Path: /conciliation/api, Backend: Service: back'
  labels: *id011
  name: conciliation
  namespace: conciliation
  status: Active
  type: Ingress
  url: conciliation-rec.korian.cloud/conciliation/api
- annotations:
    meta.helm.sh/release-name: gotemberg
    meta.helm.sh/release-namespace: default
  info: 'Path: /, Backend: Service: gotemberg-gotenberg'
  labels:
    app: gotenberg
    app.kubernetes.io/instance: gotemberg
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gotenberg
    app.kubernetes.io/version: 7.5.0
    chart: gotenberg-5.3.0
    helm.sh/chart: gotenberg-5.3.0
    heritage: Helm
    release: gotemberg
  name: gotemberg-gotenberg
  namespace: default
  status: Active
  type: Ingress
  url: gotenberg.clariane.cloud/
- annotations:
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"networking.k8s.io/v1","kind":"Ingress","metadata":{"annotations":{"nginx.ingress.kubernetes.io/affinity":"cookie","nginx.ingress.kubernetes.io/backend-protocol":"HTTP","nginx.ingress.kubernetes.io/proxy-buffer-size":"8k","nginx.ingress.kubernetes.io/session-cookie-expires":"172800","nginx.ingress.kubernetes.io/session-cookie-max-age":"172800","nginx.ingress.kubernetes.io/session-cookie-name":"NEXTJS_ROUTE","nginx.ingress.kubernetes.io/session-cookie-path":"/","nginx.ingress.kubernetes.io/ssl-sni-required":"true","nginx.ingress.kubernetes.io/ssl-sni-strict":"true"},"labels":{"app.kubernetes.io/instance":"ekara-viewer-rec","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"ekara-viewer","argocd.argoproj.io/instance":"ekara-viewer-rec","helm.sh/chart":"ekara-viewer-0.1.0"},"name":"ekara-viewer-rec","namespace":"ekara-viewer"},"spec":{"ingressClassName":"nginx","rules":[{"host":"ekara-viewer-poc.korian.cloud","http":{"paths":[{"backend":{"service":{"name":"ekara-viewer-rec","port":{"number":3000}}},"path":"/","pathType":"Prefix"}]}}],"tls":[{"hosts":["ekara-viewer-poc.korian.cloud"],"secretName":"ekara-viewer-rec-tls-secret"}]}}

      '
    meta.helm.sh/release-name: ekara-viewer-rec
    meta.helm.sh/release-namespace: ekara-viewer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/proxy-buffer-size: 8k
    nginx.ingress.kubernetes.io/session-cookie-expires: '172800'
    nginx.ingress.kubernetes.io/session-cookie-max-age: '172800'
    nginx.ingress.kubernetes.io/session-cookie-name: NEXTJS_ROUTE
    nginx.ingress.kubernetes.io/session-cookie-path: /
    nginx.ingress.kubernetes.io/ssl-sni-required: 'true'
    nginx.ingress.kubernetes.io/ssl-sni-strict: 'true'
  info: 'Path: /, Backend: Service: ekara-viewer-rec'
  labels:
    app.kubernetes.io/instance: ekara-viewer-rec
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ekara-viewer
    argocd.argoproj.io/instance: ekara-viewer-rec
    helm.sh/chart: ekara-viewer-0.1.0
  name: ekara-viewer-rec
  namespace: ekara-viewer
  status: Active
  type: Ingress
  url: ekara-viewer-poc.korian.cloud/
- annotations:
    meta.helm.sh/release-name: groupeur-pmsi
    meta.helm.sh/release-namespace: groupeur-pmsi-frm
    nginx.ingress.kubernetes.io/proxy-body-size: 300m
    nginx.org/client-max-body-size: 300m
  info: 'Path: /, Backend: Service: groupeur-pmsi'
  labels:
    app.kubernetes.io/instance: groupeur-pmsi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: groupeur
    app.kubernetes.io/version: 1.10.14
    helm.sh/chart: groupeur-1.0.0
  name: groupeur-pmsi
  namespace: groupeur-pmsi-frm
  status: Active
  type: Ingress
  url: groupeur-pmsi-frm.korian.cloud/
- annotations:
    meta.helm.sh/release-name: groupeur-pmsi
    meta.helm.sh/release-namespace: groupeur-pmsi-frm2
    nginx.ingress.kubernetes.io/proxy-body-size: 300m
    nginx.org/client-max-body-size: 300m
  info: 'Path: /, Backend: Service: groupeur-pmsi'
  labels:
    app.kubernetes.io/instance: groupeur-pmsi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: groupeur
    app.kubernetes.io/version: 1.10.14
    helm.sh/chart: groupeur-1.0.0
  name: groupeur-pmsi
  namespace: groupeur-pmsi-frm2
  status: Active
  type: Ingress
  url: groupeur-pmsi-frm2.korian.cloud/
- annotations:
    meta.helm.sh/release-name: groupeur-pmsi
    meta.helm.sh/release-namespace: groupeur-pmsi-qua
  info: 'Path: /, Backend: Service: groupeur-pmsi'
  labels:
    app.kubernetes.io/instance: groupeur-pmsi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: groupeur
    app.kubernetes.io/version: 1.10.14
    helm.sh/chart: groupeur-1.0.0
  name: groupeur-pmsi
  namespace: groupeur-pmsi-qua
  status: Active
  type: Ingress
  url: groupeur-pmsi-qua.korian.cloud/
- annotations:
    meta.helm.sh/release-name: groupeur-pmsi
    meta.helm.sh/release-namespace: groupeur-pmsi-upg
  info: 'Path: /, Backend: Service: groupeur-pmsi'
  labels:
    app.kubernetes.io/instance: groupeur-pmsi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: groupeur
    app.kubernetes.io/version: 1.10.15
    helm.sh/chart: groupeur-1.0.0
  name: groupeur-pmsi
  namespace: groupeur-pmsi-upg
  status: Active
  type: Ingress
  url: groupeur-pmsi-upg.korian.cloud/
- annotations:
    meta.helm.sh/release-name: groupeur-pmsi
    meta.helm.sh/release-namespace: groupeur-pmsi
    nginx.ingress.kubernetes.io/proxy-body-size: 300m
    nginx.org/client-max-body-size: 300m
  info: 'Path: /, Backend: Service: groupeur-pmsi'
  labels:
    app.kubernetes.io/instance: groupeur-pmsi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: groupeur
    app.kubernetes.io/version: 1.10.15
    helm.sh/chart: groupeur-1.0.0
  name: groupeur-pmsi
  namespace: groupeur-pmsi
  status: Active
  type: Ingress
  url: groupeur-pmsi-rec.korian.cloud/
- annotations:
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"networking.k8s.io/v1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"kopilot-rec","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"kopilot","app.kubernetes.io/version":"1.1.6","argocd.argoproj.io/instance":"kopilot-rec","helm.sh/chart":"kopilot-0.1.0"},"name":"kopilot-rec","namespace":"kopilot"},"spec":{"ingressClassName":"nginx","rules":[{"host":"kopilot-rec.clariane.cloud","http":{"paths":[{"backend":{"service":{"name":"kopilot-rec","port":{"number":8081}}},"path":"/","pathType":"Prefix"}]}}],"tls":[{"hosts":["kopilot-rec.clariane.cloud"],"secretName":"kopilot-rec-key-cert"}]}}

      '
  info: 'Path: /, Backend: Service: kopilot-rec'
  labels:
    app.kubernetes.io/instance: kopilot-rec
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kopilot
    app.kubernetes.io/version: 1.1.6
    argocd.argoproj.io/instance: kopilot-rec
    helm.sh/chart: kopilot-0.1.0
  name: kopilot-rec
  namespace: kopilot
  status: Active
  type: Ingress
  url: kopilot-rec.clariane.cloud/
- annotations:
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"networking.k8s.io/v1","kind":"Ingress","metadata":{"annotations":{"nginx.ingress.kubernetes.io/rewrite-target":"/$2","nginx.ingress.kubernetes.io/ssl-redirect":"true"},"labels":{"argocd.argoproj.io/instance":"korall-hub-rec"},"name":"korall-hub","namespace":"korall-hub"},"spec":{"ingressClassName":"nginx","rules":[{"host":"korall-hub-recette.korian.cloud","http":{"paths":[{"backend":{"service":{"name":"korall-hub","port":{"number":3000}}},"path":"/","pathType":"Prefix"}]}}],"tls":[{"hosts":["korall-hub-recette.korian.cloud"],"secretName":"tls-secret"}]}}

      '
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
  info: 'Path: /, Backend: Service: korall-hub'
  labels:
    argocd.argoproj.io/instance: korall-hub-rec
  name: korall-hub
  namespace: korall-hub
  status: Active
  type: Ingress
  url: korall-hub-recette.korian.cloud/
- annotations:
    cert-manager.io/cluster-issuer: letsencrypt-cloudflare
    meta.helm.sh/release-name: portal-checker
    meta.helm.sh/release-namespace: kube-infra
    traefik.ingress.kubernetes.io/router.middlewares: kube-infra-generic-dashboard-auth@kubernetescrd
  info: 'Path: /, Backend: Service: portal-checker'
  labels:
    app: portal-checker
    app.kubernetes.io/managed-by: Helm
  name: portal-checker
  namespace: kube-infra
  status: Active
  type: Ingress
  url: portal-checker.example.com/
- annotations:
    cert-manager.io/cluster-issuer: letsencrypt-cloudflare
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"networking.k8s.io/v1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-cloudflare","traefik.ingress.kubernetes.io/router.middlewares":"kube-infra-generic-dashboard-auth@kubernetescrd"},"labels":{"app":"portal-checker","argocd.argoproj.io/instance":"portal-checker"},"name":"portal-checker","namespace":"kube-monitoring"},"spec":{"ingressClassName":"traefik","rules":[{"host":"portal-checker.example.com","http":{"paths":[{"backend":{"service":{"name":"portal-checker","port":{"number":80}}},"path":"/","pathType":"Prefix"}]}}],"tls":[{"hosts":["portal-checker.example.com"],"secretName":"portal-checker-certificate-tls"}]}}

      '
    traefik.ingress.kubernetes.io/router.middlewares: kube-infra-generic-dashboard-auth@kubernetescrd
  info: 'Path: /, Backend: Service: portal-checker'
  labels:
    app: portal-checker
    argocd.argoproj.io/instance: portal-checker
  name: portal-checker
  namespace: kube-monitoring
  status: Active
  type: Ingress
  url: portal-checker.example.com/
- annotations: &id012
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"networking.k8s.io/v1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"likor-integ","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"likor","app.kubernetes.io/version":"1.16.0","argocd.argoproj.io/instance":"likor-integ","helm.sh/chart":"likor-0.1.0"},"name":"likor-integ","namespace":"likor-integ"},"spec":{"ingressClassName":"nginx","rules":[{"host":"likor-integration.clariane.cloud","http":{"paths":[{"backend":{"service":{"name":"likor-integ-api","port":{"number":8081}}},"path":"/azure-token-verify","pathType":"Prefix"},{"backend":{"service":{"name":"likor-integ-api","port":{"number":8081}}},"path":"/login-db","pathType":"Prefix"},{"backend":{"service":{"name":"likor-integ-api","port":{"number":8081}}},"path":"/login-ldap","pathType":"Prefix"},{"backend":{"service":{"name":"likor-integ-api","port":{"number":8081}}},"path":"/api","pathType":"Prefix"},{"backend":{"service":{"name":"likor-integ-front","port":{"number":8081}}},"path":"/","pathType":"Prefix"}]}}],"tls":[{"hosts":["likor-integration.clariane.cloud"],"secretName":"tls-secret"}]}}

      '
  info: 'Path: /azure-token-verify, Backend: Service: likor-integ-api'
  labels: &id013
    app.kubernetes.io/instance: likor-integ
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: likor
    app.kubernetes.io/version: 1.16.0
    argocd.argoproj.io/instance: likor-integ
    helm.sh/chart: likor-0.1.0
  name: likor-integ
  namespace: likor-integ
  status: Active
  type: Ingress
  url: likor-integration.clariane.cloud/azure-token-verify
- annotations: *id012
  info: 'Path: /login-db, Backend: Service: likor-integ-api'
  labels: *id013
  name: likor-integ
  namespace: likor-integ
  status: Active
  type: Ingress
  url: likor-integration.clariane.cloud/login-db
- annotations: *id012
  info: 'Path: /login-ldap, Backend: Service: likor-integ-api'
  labels: *id013
  name: likor-integ
  namespace: likor-integ
  status: Active
  type: Ingress
  url: likor-integration.clariane.cloud/login-ldap
- annotations: *id012
  info: 'Path: /api, Backend: Service: likor-integ-api'
  labels: *id013
  name: likor-integ
  namespace: likor-integ
  status: Active
  type: Ingress
  url: likor-integration.clariane.cloud/api
- annotations: *id012
  info: 'Path: /, Backend: Service: likor-integ-front'
  labels: *id013
  name: likor-integ
  namespace: likor-integ
  status: Active
  type: Ingress
  url: likor-integration.clariane.cloud/
- annotations: &id014
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"networking.k8s.io/v1","kind":"Ingress","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"likor-rec","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"likor","app.kubernetes.io/version":"1.16.0","argocd.argoproj.io/instance":"likor-rec","helm.sh/chart":"likor-0.1.0"},"name":"likor-rec","namespace":"likor"},"spec":{"ingressClassName":"nginx","rules":[{"host":"likor-recette.clariane.cloud","http":{"paths":[{"backend":{"service":{"name":"likor-rec-api","port":{"number":8081}}},"path":"/azure-token-verify","pathType":"Prefix"},{"backend":{"service":{"name":"likor-rec-api","port":{"number":8081}}},"path":"/login-db","pathType":"Prefix"},{"backend":{"service":{"name":"likor-rec-api","port":{"number":8081}}},"path":"/login-ldap","pathType":"Prefix"},{"backend":{"service":{"name":"likor-rec-api","port":{"number":8081}}},"path":"/api","pathType":"Prefix"},{"backend":{"service":{"name":"likor-rec-front","port":{"number":8081}}},"path":"/","pathType":"Prefix"}]}}],"tls":[{"hosts":["likor-recette.clariane.cloud"],"secretName":"tls-secret"}]}}

      '
  info: 'Path: /azure-token-verify, Backend: Service: likor-rec-api'
  labels: &id015
    app.kubernetes.io/instance: likor-rec
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: likor
    app.kubernetes.io/version: 1.16.0
    argocd.argoproj.io/instance: likor-rec
    helm.sh/chart: likor-0.1.0
  name: likor-rec
  namespace: likor
  status: Active
  type: Ingress
  url: likor-recette.clariane.cloud/azure-token-verify
- annotations: *id014
  info: 'Path: /login-db, Backend: Service: likor-rec-api'
  labels: *id015
  name: likor-rec
  namespace: likor
  status: Active
  type: Ingress
  url: likor-recette.clariane.cloud/login-db
- annotations: *id014
  info: 'Path: /login-ldap, Backend: Service: likor-rec-api'
  labels: *id015
  name: likor-rec
  namespace: likor
  status: Active
  type: Ingress
  url: likor-recette.clariane.cloud/login-ldap
- annotations: *id014
  info: 'Path: /api, Backend: Service: likor-rec-api'
  labels: *id015
  name: likor-rec
  namespace: likor
  status: Active
  type: Ingress
  url: likor-recette.clariane.cloud/api
- annotations: *id014
  info: 'Path: /, Backend: Service: likor-rec-front'
  labels: *id015
  name: likor-rec
  namespace: likor
  status: Active
  type: Ingress
  url: likor-recette.clariane.cloud/
- annotations: {}
  info: 'Path: /, Backend: Service: loki-oth-grafana'
  labels:
    app.kubernetes.io/instance: loki-oth
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 11.6.0
    argocd.argoproj.io/instance: loki-oth
    helm.sh/chart: grafana-8.11.4
  name: loki-oth-grafana
  namespace: logging
  status: Active
  type: Ingress
  url: log-aks-private-other.clariane.cloud/
- annotations:
    meta.helm.sh/release-name: mediation
    meta.helm.sh/release-namespace: mediation
  info: 'Path: /, Backend: Service: mediation-rec'
  labels:
    app.kubernetes.io/instance: mediation
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mediation
    app.kubernetes.io/version: 0.1.0
    helm.sh/chart: mediation-0.1.0
  name: mediation-rec
  namespace: mediation
  status: Active
  type: Ingress
  url: mediation-recette.clariane.cloud/
- annotations: {}
  info: 'Path: /, Backend: Service: monitoring-oth-grafana'
  labels:
    app.kubernetes.io/instance: monitoring-oth
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 11.3.1
    argocd.argoproj.io/instance: monitoring-oth
    helm.sh/chart: grafana-8.6.4
  name: monitoring-oth-grafana
  namespace: monitoring
  status: Active
  type: Ingress
  url: monitoring-priv-devops-other.clariane.cloud/
- annotations: {}
  info: 'Path: /, Backend: Service: onboarding-hr-int'
  labels:
    app.kubernetes.io/instance: onboarding-hr-int
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: onboarding-hr
    app.kubernetes.io/version: 1.16.0
    argocd.argoproj.io/instance: onboarding-hr-int
    helm.sh/chart: onboarding-hr-0.1.0
  name: onboarding-hr-int
  namespace: onboarding-hr-int
  status: Active
  type: Ingress
  url: collaborateur-rh-integration.clariane.cloud/
- annotations: {}
  info: 'Path: /, Backend: Service: onboarding-hr-rec'
  labels:
    app.kubernetes.io/instance: onboarding-hr-rec
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: onboarding-hr
    app.kubernetes.io/version: 1.16.0
    argocd.argoproj.io/instance: onboarding-hr-rec
    helm.sh/chart: onboarding-hr-0.1.0
  name: onboarding-hr-rec
  namespace: onboarding-hr
  status: Active
  type: Ingress
  url: collaborateur-rh-recette.clariane.cloud/
- annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/proxy-buffer-size: 16k
    nginx.ingress.kubernetes.io/proxy-buffers: 4 16k
    nginx.ingress.kubernetes.io/proxy-max-temp-file-size: 128m
    nginx.ingress.kubernetes.io/proxy-read-timeout: '120'
    nginx.ingress.kubernetes.io/ssl-sni-required: 'true'
    nginx.ingress.kubernetes.io/ssl-sni-strict: 'true'
  info: 'Path: /, Backend: Service: recrutement-rec'
  labels:
    app.kubernetes.io/instance: recrutement-rec
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: recrutement-rec
    argocd.argoproj.io/instance: recrutement-rec
    helm.sh/chart: recrutement-0.1.0
  name: recrutement-rec
  namespace: recrutement
  status: Active
  type: Ingress
  url: recrutement-recette.clariane.cloud/
- annotations: &id016
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/proxy-buffer-size: 8k
    nginx.ingress.kubernetes.io/ssl-sni-required: 'true'
    nginx.ingress.kubernetes.io/ssl-sni-strict: 'true'
  info: 'Path: /api, Backend: Service: store-locator-rec-api'
  labels: &id017
    app.kubernetes.io/instance: store-locator-rec
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: store-locator
    argocd.argoproj.io/instance: store-locator-rec
    helm.sh/chart: store-locator-0.1.0
  name: store-locator-rec
  namespace: store-locator
  status: Active
  type: Ingress
  url: facility-locator-recette.clariane.cloud/api
- annotations: *id016
  info: 'Path: /, Backend: Service: store-locator-rec-front'
  labels: *id017
  name: store-locator-rec
  namespace: store-locator
  status: Active
  type: Ingress
  url: facility-locator-recette.clariane.cloud/
- annotations:
    meta.helm.sh/release-name: universite-clariane-rec
    meta.helm.sh/release-namespace: universite-clariane
  info: 'Path: /, Backend: Service: universite-clariane-rec-directus'
  labels:
    app.kubernetes.io/instance: universite-clariane-rec
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: universite-clariane
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: universite-clariane-0.1.0
  name: universite-clariane-rec-directus
  namespace: universite-clariane
  status: Active
  type: Ingress
  url: backoffice-universite-recette.clariane.cloud/
- annotations:
    meta.helm.sh/release-name: universite-clariane-rec
    meta.helm.sh/release-namespace: universite-clariane
  info: 'Path: /, Backend: Service: universite-clariane-rec-nextjs'
  labels:
    app.kubernetes.io/instance: universite-clariane-rec
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: universite-clariane
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: universite-clariane-0.1.0
  name: universite-clariane-rec-nextjs
  namespace: universite-clariane
  status: Active
  type: Ingress
  url: universite-recette.clariane.cloud/
- annotations:
    kubernetes.io/ingress.class: nginx
    meta.helm.sh/release-name: verdaccio
    meta.helm.sh/release-namespace: verdaccio
  info: 'Path: /, Backend: Service: verdaccio'
  labels:
    app: verdaccio
    app.kubernetes.io/instance: verdaccio
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: verdaccio
    app.kubernetes.io/version: 5.29.0
    helm.sh/chart: verdaccio-4.16.0
  name: verdaccio
  namespace: verdaccio
  status: Active
  type: Ingress
  url: verdaccio.clariane.cloud/

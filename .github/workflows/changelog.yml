name: Generate Changelog

on:
  push:
    tags:
      - 'v*' # Déclenche sur les tags qui commencent par v

jobs:
  changelog:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important pour avoir l'historique complet
          
      - name: Generate changelog
        run: |
            # Récupère le dernier tag
            if git describe --tags --abbrev=0 &>/dev/null; then
              LATEST_TAG=$(git describe --tags --abbrev=0)
              if git describe --tags --abbrev=0 HEAD^ &>/dev/null; then
                PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^)
                RANGE="$PREVIOUS_TAG..$LATEST_TAG"
              else
                # Si pas de tag précédent, on prend depuis le début
                RANGE="$LATEST_TAG"
              fi
            else
              # Si aucun tag n'existe
              LATEST_TAG="v0.1.0"
              RANGE=""
            fi
            
            # Génère le changelog
            echo "# Changelog pour $LATEST_TAG" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "## 🚀 Nouvelles fonctionnalités" >> CHANGELOG.md
            if [ -n "$RANGE" ]; then
              git log $RANGE --pretty=format:"- %s" --grep="^feat:" >> CHANGELOG.md
            else
              git log --pretty=format:"- %s" --grep="^feat:" >> CHANGELOG.md
            fi
            echo "" >> CHANGELOG.md
            echo "## 🐛 Corrections de bugs" >> CHANGELOG.md
            if [ -n "$RANGE" ]; then
              git log $RANGE --pretty=format:"- %s" --grep="^fix:" >> CHANGELOG.md
            else
              git log --pretty=format:"- %s" --grep="^fix:" >> CHANGELOG.md
            fi
            echo "" >> CHANGELOG.md
            echo "## 📝 Autres changements" >> CHANGELOG.md
            if [ -n "$RANGE" ]; then
              git log $RANGE --pretty=format:"- %s" --grep="^(chore|docs|style|refactor|perf|test):" >> CHANGELOG.md
            else
              git log --pretty=format:"- %s" --grep="^(chore|docs|style|refactor|perf|test):" >> CHANGELOG.md
            fi
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
image:
  repository: fizzbuzz2/portal-checker
  tag: "0a25427"
  pullPolicy: "IfNotPresent"
  pullSecrets: []
commonLabels:
  tags.datadoghq.com/env: home
  tags.datadoghq.com/service: portal-checker
  tags.datadoghq.com/version: v2.4.0
  # admission.datadoghq.com/enabled: "true"
domainName: "portal-checker.example.com"
autoscaling:
  enabled: false
replicas: 1
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 25%
    maxSurge: 25%
serviceAccount:
  create: true
  name: portal-checker
 
application:
  ports:
    - name: http
      containerPort: 5000
      protocol: TCP
  containerName: portal-checker
  command: []
  args: []
service:
  port: 80
  targetPort: 5000
  type: ClusterIP
  portName: http
 
volumeMounts: []
volumes: []
env:
  - name: LOG_LEVEL
    value: "INFO"
excludedUrls: []
certificate:
  enabled: false
  # Chemin relatif dans le chart
  # filePath: "certs/zcaler_root.crt"
ingressClassName: traefik
podAnnotations:
  ad.datadoghq.com/portal-checker.logs: '[{"source":"python", "service":"portal-checker}]'
initContainers: []
resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 50m
    memory: 128Mi
envFrom: []
nodeSelector: {}
livenessProbe:
  httpGet:
    scheme: HTTP
    path: /health
    port: 5000
  initialDelaySeconds: 10
  periodSeconds: 30
  timeoutSeconds: 2
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  httpGet:
    scheme: HTTP
    path: /health
    port: 5000
  initialDelaySeconds: 5
  periodSeconds: 30
  timeoutSeconds: 2
  successThreshold: 1
  failureThreshold: 3

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "application.fullname" . }}
  labels: {{- include "application.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  {{- if and (not .Values.autoscaling.enabled)  }}
  replicas: {{ .Values.replicas }}
  {{- end }}
  selector:
    matchLabels: {{- include "application.selectorLabels" . | nindent 6 }}
  strategy: {{ toYaml .Values.strategy | nindent 4 }}
  template:
    metadata:
      labels: {{- include "application.labels" . | nindent 8 }}
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ default (include "application.fullname" .) .Values.serviceAccount.name }}
      {{- with .Values.securityContext }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- $initContainers := list }}
      {{- if .Values.initContainers }}
        {{- $initContainers = concat $initContainers .Values.initContainers }}
      {{- end }}
      {{- if not .Values.autoswagger.disablePresidio }}
        {{- $spacyInit := dict "name" "spacy-model-init" "image" .Values.presidio.initImage "imagePullPolicy" "IfNotPresent" "volumeMounts" (list (dict "name" "spacy-models-volume" "mountPath" "/shared")) "resources" (dict "requests" (dict "cpu" "100m" "memory" "128Mi") "limits" (dict "cpu" "500m" "memory" "512Mi")) }}
        {{- $initContainers = append $initContainers $spacyInit }}
      {{- end }}
      {{- if $initContainers }}
      initContainers: {{- toYaml $initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ default .Values.application.containerName (include "application.fullname" .) }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.application.ports }}
          ports: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.application.command }}
          command: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.application.args }}
          args: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.env }}
          env: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.envFrom }}
          envFrom: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- $volumeMounts := .Values.volumeMounts | default list }}
          {{- if not .Values.autoswagger.disablePresidio }}
            {{- $spacyMount := dict "name" "spacy-models-volume" "mountPath" "/app/spacy_models" "readOnly" true }}
            {{- $volumeMounts = append $volumeMounts $spacyMount }}
          {{- end }}
          {{- if $volumeMounts }}
          volumeMounts: {{- toYaml $volumeMounts | nindent 12 }}
          {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            httpGet:
              path: {{ .httpGet.path }}
              port: {{ .httpGet.port }}
              scheme: {{ .httpGet.scheme }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            successThreshold: {{ .successThreshold }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            httpGet:
              path: {{ .httpGet.path }}
              port: {{ .httpGet.port }}
              scheme: {{ .httpGet.scheme }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            successThreshold: {{ .successThreshold }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
      {{- $volumes := .Values.volumes | default list }}
      {{- if not .Values.autoswagger.disablePresidio }}
        {{- $spacyVolume := dict "name" "spacy-models-volume" "persistentVolumeClaim" (dict "claimName" (printf "%s-spacy-models" (include "application.fullname" .))) }}
        {{- $volumes = append $volumes $spacyVolume }}
      {{- end }}
      {{- if $volumes }}
      volumes: {{- toYaml $volumes | nindent 8 }}
      {{- end }}
      {{- with .Values.dnsConfig }}
      dnsConfig: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
